{"ast":null,"code":"import { Response } from \"miragejs\";\nimport { formatDate, requiresAuth } from \"../utils/authUtils\";\n\n/**\r\n * All the routes related to Cart are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\n\n/**\r\n * This handler handles getting items to user's cart.\r\n * send GET Request at /api/user/cart\r\n * */\nexport const getCartItemsHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  console.log(userId);\n  if (!userId) {\n    return new Response(404, {}, {\n      errors: [\"The email you entered is not Registered. Not Found error\"]\n    });\n  }\n  const userCart = schema.users.findBy({\n    _id: userId\n  }).cart;\n  return new Response(200, {}, {\n    cart: userCart\n  });\n};\n\n/**\r\n * This handler handles adding items to user's cart.\r\n * send POST Request at /api/user/cart\r\n * body contains {product}\r\n * */\n\nexport const addItemToCartHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(404, {}, {\n        errors: [\"The email you entered is not Registered. Not Found error\"]\n      });\n    }\n    const userCart = schema.users.findBy({\n      _id: userId\n    }).cart;\n    const {\n      product\n    } = JSON.parse(request.requestBody);\n    userCart.push({\n      ...product,\n      createdAt: formatDate(),\n      updatedAt: formatDate(),\n      qty: 1\n    });\n    this.db.users.update({\n      _id: userId\n    }, {\n      cart: userCart\n    });\n    return new Response(201, {}, {\n      cart: userCart\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};\n\n/**\r\n * This handler handles removing items to user's cart.\r\n * send DELETE Request at /api/user/cart/:productId\r\n * */\n\nexport const removeItemFromCartHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(404, {}, {\n        errors: [\"The email you entered is not Registered. Not Found error\"]\n      });\n    }\n    let userCart = schema.users.findBy({\n      _id: userId\n    }).cart;\n    const productId = request.params.productId;\n    userCart = userCart.filter(item => item._id !== productId);\n    this.db.users.update({\n      _id: userId\n    }, {\n      cart: userCart\n    });\n    return new Response(200, {}, {\n      cart: userCart\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};\n\n/**\r\n * This handler handles adding items to user's cart.\r\n * send POST Request at /api/user/cart/:productId\r\n * body contains {action} (whose 'type' can be increment or decrement)\r\n * */\n\nexport const updateCartItemHandler = function (schema, request) {\n  const productId = request.params.productId;\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(404, {}, {\n        errors: [\"The email you entered is not Registered. Not Found error\"]\n      });\n    }\n    const userCart = schema.users.findBy({\n      _id: userId\n    }).cart;\n    const {\n      action\n    } = JSON.parse(request.requestBody);\n    if (action.type === \"increment\") {\n      userCart.forEach(product => {\n        if (product._id === productId) {\n          product.qty += 1;\n          product.updatedAt = formatDate();\n        }\n      });\n    } else if (action.type === \"decrement\") {\n      userCart.forEach(product => {\n        if (product._id === productId) {\n          product.qty -= 1;\n          product.updatedAt = formatDate();\n        }\n      });\n    }\n    this.db.users.update({\n      _id: userId\n    }, {\n      cart: userCart\n    });\n    return new Response(200, {}, {\n      cart: userCart\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};","map":{"version":3,"names":["Response","formatDate","requiresAuth","getCartItemsHandler","schema","request","userId","call","console","log","errors","userCart","users","findBy","_id","cart","addItemToCartHandler","product","JSON","parse","requestBody","push","createdAt","updatedAt","qty","db","update","error","removeItemFromCartHandler","productId","params","filter","item","updateCartItemHandler","action","type","forEach"],"sources":["C:/Users/ayush/Documents/GitHub/E-commerce/e-commerce/src/backend/controllers/CartController.js"],"sourcesContent":["import { Response } from \"miragejs\";\r\nimport { formatDate, requiresAuth } from \"../utils/authUtils\";\r\n\r\n/**\r\n * All the routes related to Cart are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting items to user's cart.\r\n * send GET Request at /api/user/cart\r\n * */\r\nexport const getCartItemsHandler = function (schema, request) {\r\n  const userId = requiresAuth.call(this, request);\r\n  console.log(userId)\r\n  if (!userId) {\r\n    return new Response(\r\n      404,\r\n      {},\r\n      {\r\n        errors: [\"The email you entered is not Registered. Not Found error\"],\r\n      }\r\n    );\r\n  }\r\n  const userCart = schema.users.findBy({ _id: userId }).cart;\r\n  return new Response(200, {}, { cart: userCart });\r\n};\r\n\r\n/**\r\n * This handler handles adding items to user's cart.\r\n * send POST Request at /api/user/cart\r\n * body contains {product}\r\n * */\r\n\r\nexport const addItemToCartHandler = function (schema, request) {\r\n  const userId = requiresAuth.call(this, request);\r\n  try {\r\n    if (!userId) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    const userCart = schema.users.findBy({ _id: userId }).cart;\r\n    const { product } = JSON.parse(request.requestBody);\r\n    userCart.push({\r\n      ...product,\r\n      createdAt: formatDate(),\r\n      updatedAt: formatDate(),\r\n      qty: 1,\r\n    });\r\n    this.db.users.update({ _id: userId }, { cart: userCart });\r\n    return new Response(201, {}, { cart: userCart });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles removing items to user's cart.\r\n * send DELETE Request at /api/user/cart/:productId\r\n * */\r\n\r\nexport const removeItemFromCartHandler = function (schema, request) {\r\n  const userId = requiresAuth.call(this, request);\r\n  try {\r\n    if (!userId) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    let userCart = schema.users.findBy({ _id: userId }).cart;\r\n    const productId = request.params.productId;\r\n    userCart = userCart.filter((item) => item._id !== productId);\r\n    this.db.users.update({ _id: userId }, { cart: userCart });\r\n    return new Response(200, {}, { cart: userCart });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles adding items to user's cart.\r\n * send POST Request at /api/user/cart/:productId\r\n * body contains {action} (whose 'type' can be increment or decrement)\r\n * */\r\n\r\nexport const updateCartItemHandler = function (schema, request) {\r\n  const productId = request.params.productId;\r\n  const userId = requiresAuth.call(this, request);\r\n  try {\r\n    if (!userId) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    const userCart = schema.users.findBy({ _id: userId }).cart;\r\n    const { action } = JSON.parse(request.requestBody);\r\n    if (action.type === \"increment\") {\r\n      userCart.forEach((product) => {\r\n        if (product._id === productId) {\r\n          product.qty += 1;\r\n          product.updatedAt = formatDate();\r\n        }\r\n      });\r\n    } else if (action.type === \"decrement\") {\r\n      userCart.forEach((product) => {\r\n        if (product._id === productId) {\r\n          product.qty -= 1;\r\n          product.updatedAt = formatDate();\r\n        }\r\n      });\r\n    }\r\n    this.db.users.update({ _id: userId }, { cart: userCart });\r\n    return new Response(200, {}, { cart: userCart });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}