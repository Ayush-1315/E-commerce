{"ast":null,"code":"import _objectSpread from\"C:/Users/ayush/Documents/GitHub/E-commerce/e-commerce/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/ayush/Documents/GitHub/E-commerce/e-commerce/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"email\",\"password\"];import{v4 as uuid}from\"uuid\";import{Response}from\"miragejs\";import{formatDate}from\"../utils/authUtils\";var sign=require(\"jwt-encode\");/**\r\n * All the routes related to Auth are present here.\r\n * These are Publicly accessible routes.\r\n * */ /**\r\n * This handler handles user signups.\r\n * send POST Request at /api/auth/signup\r\n * body contains {firstName, lastName, email, password}\r\n * */export var signupHandler=function signupHandler(schema,request){var _JSON$parse=JSON.parse(request.requestBody),email=_JSON$parse.email,password=_JSON$parse.password,rest=_objectWithoutProperties(_JSON$parse,_excluded);try{// check if email already exists\nvar foundUser=schema.users.findBy({email:email});if(foundUser){return new Response(422,{},{errors:[\"Unprocessable Entity. Email Already Exists.\"]});}var _id=uuid();var newUser=_objectSpread(_objectSpread({_id:_id,email:email,password:password,createdAt:formatDate(),updatedAt:formatDate()},rest),{},{cart:[],wishlist:[]});var createdUser=schema.users.create(newUser);var encodedToken=sign({_id:_id,email:email},process.env.REACT_APP_JWT_SECRET);return new Response(201,{},{createdUser:createdUser,encodedToken:encodedToken});}catch(error){return new Response(500,{},{error:error});}};/**\r\n * This handler handles user login.\r\n * send POST Request at /api/auth/login\r\n * body contains {email, password}\r\n * */export var loginHandler=function loginHandler(schema,request){var _JSON$parse2=JSON.parse(request.requestBody),email=_JSON$parse2.email,password=_JSON$parse2.password;try{var foundUser=schema.users.findBy({email:email});if(!foundUser){return new Response(404,{},{errors:[\"The email you entered is not Registered. Not Found error\"]});}if(password===foundUser.password){var encodedToken=sign({_id:foundUser._id,email:email},process.env.REACT_APP_JWT_SECRET);foundUser.password=undefined;return new Response(200,{},{foundUser:foundUser,encodedToken:encodedToken});}return new Response(401,{},{errors:[\"The credentials you entered are invalid. Unauthorized access error.\"]});}catch(error){return new Response(500,{},{error:error});}};","map":{"version":3,"names":["v4","uuid","Response","formatDate","sign","require","signupHandler","schema","request","_JSON$parse","JSON","parse","requestBody","email","password","rest","_objectWithoutProperties","_excluded","foundUser","users","findBy","errors","_id","newUser","_objectSpread","createdAt","updatedAt","cart","wishlist","createdUser","create","encodedToken","process","env","REACT_APP_JWT_SECRET","error","loginHandler","_JSON$parse2","undefined"],"sources":["C:/Users/ayush/Documents/GitHub/E-commerce/e-commerce/src/backend/controllers/AuthController.js"],"sourcesContent":["import { v4 as uuid } from \"uuid\";\r\nimport { Response } from \"miragejs\";\r\nimport { formatDate } from \"../utils/authUtils\";\r\nconst sign = require(\"jwt-encode\");\r\n/**\r\n * All the routes related to Auth are present here.\r\n * These are Publicly accessible routes.\r\n * */\r\n\r\n/**\r\n * This handler handles user signups.\r\n * send POST Request at /api/auth/signup\r\n * body contains {firstName, lastName, email, password}\r\n * */\r\n\r\nexport const signupHandler = function (schema, request) {\r\n  const { email, password, ...rest } = JSON.parse(request.requestBody);\r\n  try {\r\n    // check if email already exists\r\n    const foundUser = schema.users.findBy({ email });\r\n    if (foundUser) {\r\n      return new Response(\r\n        422,\r\n        {},\r\n        {\r\n          errors: [\"Unprocessable Entity. Email Already Exists.\"],\r\n        }\r\n      );\r\n    }\r\n    const _id = uuid();\r\n    const newUser = {\r\n      _id,\r\n      email,\r\n      password,\r\n      createdAt: formatDate(),\r\n      updatedAt: formatDate(),\r\n      ...rest,\r\n      cart: [],\r\n      wishlist: [],\r\n    };\r\n    const createdUser = schema.users.create(newUser);\r\n    const encodedToken = sign({ _id, email }, process.env.REACT_APP_JWT_SECRET);\r\n    return new Response(201, {}, { createdUser, encodedToken });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles user login.\r\n * send POST Request at /api/auth/login\r\n * body contains {email, password}\r\n * */\r\n\r\nexport const loginHandler = function (schema, request) {\r\n  const { email, password } = JSON.parse(request.requestBody);\r\n  try {\r\n    const foundUser = schema.users.findBy({ email });\r\n    if (!foundUser) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        { errors: [\"The email you entered is not Registered. Not Found error\"] }\r\n      );\r\n    }\r\n    if (password === foundUser.password) {\r\n      const encodedToken = sign(\r\n        { _id: foundUser._id, email },\r\n        process.env.REACT_APP_JWT_SECRET\r\n      );\r\n      foundUser.password = undefined;\r\n      return new Response(200, {}, { foundUser, encodedToken });\r\n    }\r\n    return new Response(\r\n      401,\r\n      {},\r\n      {\r\n        errors: [\r\n          \"The credentials you entered are invalid. Unauthorized access error.\",\r\n        ],\r\n      }\r\n    );\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}