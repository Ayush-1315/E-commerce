{"ast":null,"code":"// import { useState } from \"react\";\n// import { useAuth } from \"../context/authContext\";\n// import { useCart } from \"../context/cartContext\";\n// import { useWishlist } from \"../context/wishistContext\";\n// import \"../pages/User/viewUser.css\";\n// import MaleUser from \"../../images/maleUser.png\";\n// import FemaleUser from \"../../images/femaleUser.png\";\n// import { useUser } from \"../context/userContext\";\n// export const ShowUser = () => {\n//   const { authDispatch, setIsLogin, authState } = useAuth();\n//   const { cartDispatch } = useCart();\n//   const { wishlistDispatch } = useWishlist();\n//   const { addresses,addNewAddress,updateAddress} = useUser();\n//   const { firstName, lastName, gender, email } = authState;\n//   const [showTab, setShowTab] = useState(0);\n//   const [update,setUpdate]=useState(-1);\n//   const [showForm,setShowForm]=useState(false);\n//   const initialData = {\n//     firstName: \"\",\n//     lastName: \"\",\n//     gender: \"\",\n//     city: \"\",\n//     state: \"\",\n//     country: \"\",\n//     pinCode: \"\",\n//     phone: \"\",\n//   };\n//   const [newAddress, setNewAddress] = useState(initialData);\n//   const changeHandler = (attribute, value) => {\n//     setNewAddress({ ...newAddress, [attribute]: value });\n//   };\n//   const submitForm=(e)=>{\n//     e.preventDefault();\n//     if(update!==-1)\n//     {updateAddress(update,newAddress)\n//      setUpdate(-1);\n//     }\n//     else\n//     addNewAddress(newAddress);\n//     setShowForm(false);\n//   }\n//   const updateHandler=(index)=>{\n//     setNewAddress(addresses[index]);\n//     setShowForm(true);\n//     setUpdate(index);\n//   }\n//   console.log(addresses);\n//   // const {firstName:formFirstName,lastName:formLastName,gender:formGender,phone,city,state,country,pinCode}=newAddress\n//   return (\n//     <>\n//     <div className=\"userMenu\">\n//       {/* <h2\n//         style={{ margin: \"0\", padding: \"1rem\" }}\n//       >{`${firstName} ${lastName}`}</h2>\n//       <p>Email:{email}</p>\n//       <p>Gender:{gender}</p>\n//       <p>Phone Number: {phone}</p>\n//       <p>Address: {`${city},${state},${country}`}</p>\n//       <p>Pin Code: {pin}</p>\n//       <button\n//         onClick={() => {\n//           authDispatch({ type: \"LOG_OUT\" });\n//           cartDispatch({ type: \"RESET\" });\n//           wishlistDispatch({ type: \"RESET\" });\n//           setIsLogin(false);\n//         }}\n//       >\n//         LogOut\n//       </button> */}\n//       <div className=\"userTabs\">\n//         <div\n//           className=\"tabs\"\n//           onClick={() => setShowTab(0)}\n//           style={{ borderBottom: showTab === 0 && \"2px solid red\" }}\n//         >\n//           User Info\n//         </div>\n//         <div\n//           className=\"tabs\"\n//           onClick={() => setShowTab(1)}\n//           style={{ borderBottom: showTab === 1 && \"2px solid red\" }}\n//         >\n//           Orders\n//         </div>\n//         <div\n//           className=\"tabs\"\n//           onClick={() => setShowTab(2)}\n//           style={{ borderBottom: showTab === 2 && \"2px solid red\" }}\n//         >\n//           Addresses\n//         </div>\n//       </div>\n//       <div\n//         style={{ display: showTab === 0 ? \"block\" : \"none\" }}\n//         className=\"tabMenu\"\n//       >\n//         <img\n//           src={gender.toLowerCase() === \"female\" ? FemaleUser : MaleUser}\n//           alt=\"userAvatar\"\n//           className=\"avatar\"\n//         />\n//         <h2>{`${firstName} ${lastName}`}</h2>\n//         <p>Email: {email}</p>\n//         <p>Gender: {gender}</p>\n//         <button\n//           onClick={() => {\n//             authDispatch({ type: \"LOG_OUT\" });\n//             cartDispatch({ type: \"RESET\" });\n//             wishlistDispatch({ type: \"RESET\" });\n//             setIsLogin(false);\n//           }}\n//         >\n//           LogOut\n//         </button>\n//       </div>\n//       <div\n//         style={{ display: showTab === 1 ? \"block\" : \"none\" }}\n//         className=\"tabMenu\"\n//       >\n//         OrdersHere\n//       </div>\n//       <div\n//         style={{ display: showTab === 2 ? \"block\" : \"none\" }}\n//         className=\"tabMenu\"\n//       >\n//         {addresses.map((address, index) => {\n//           const { city, state, country, pinCode, phone, firstName, lastName } =\n//             address;\n//           return (\n//             <div key={index} className=\"addressCards\">\n//               <p>\n//                 {firstName} {lastName}\n//               </p>\n//               <p>Phone: {phone}</p>\n//               <p>\n//                 {city},{state},{country},{pinCode}\n//               </p>\n//               <button onClick={()=>updateHandler(index)}>Update</button>\n//             </div>\n//           );\n//         })}\n//         <button onClick={()=>{\n//           setShowForm(true)\n//           setNewAddress(initialData);\n//         }}>Add new Address</button>\n//       </div>\n//     </div>\n//     <div className=\"formBackground\" style={{display:showForm?\"block\":\"none\"}}></div>\n//     <div style={{width:\"50%\",background:\"white\",display:showForm?\"block\":\"none\"}} className=\"addressForm\">\n//           <form action=\"#\">\n//             <label htmlFor=\"fName\">First Name</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"FIRST NAME\"\n//               id=\"fName\"\n//               name=\"firstName\"\n//               onChange={(e) => changeHandler(\"firstName\", e.target.value)}\n//               defaultValue={newAddress?.firstName}\n\n//             />\n//             <label htmlFor=\"lName\">Last Name</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"LAST NAME\"\n//               id=\"lName\"\n//               onChange={(e) => changeHandler(\"lastName\", e.target.value)}\n//               defaultValue={newAddress?.lastName}\n//             />\n//             <label htmlFor=\"email\">Email address</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               onChange={(e) => changeHandler(\"email\", e.target.value)}\n//               defaultValue={newAddress?.email}\n//             />\n//             <input\n//               type=\"radio\"\n//               id=\"male\"\n//               name=\"gender\"\n//               value=\"male\"\n//               onChange={(e) => changeHandler(\"gender\", e.target.value)}\n//               selected={newAddress.gender.toLowerCase()===\"male\"}\n//             />\n//             {JSON.stringify(newAddress.gender.toLowerCase()===\"female\")}\n//             <label htmlFor=\"male\">Male</label>\n//             <input\n//               type=\"radio\"\n//               id=\"female\"\n//               name=\"gender\"\n//               value=\"female\"\n//               onChange={(e) => changeHandler(\"gender\", e.target.value)}\n//               selected={newAddress.gender.toLowerCase()===\"female\"}\n//             />\n//             <label htmlFor=\"female\">Female</label>\n//             <input\n//               type=\"radio\"\n//               id=\"other\"\n//               name=\"gender\"\n//               value=\"other\"\n//               onChange={(e) => changeHandler(\"gender\", e.target.value)}\n//               selected={newAddress.gender.toLowerCase()===\"other\"}\n//             />\n//             <label htmlFor=\"other\">Other</label>\n//             <p>Billing Address</p>\n//             <label htmlFor=\"city\">City</label>\n//             <input\n//               type=\"text\"\n//               id=\"city\"\n//               onChange={(e) => changeHandler(\"city\", e.target.value, true)}\n//               defaultValue={newAddress?.city}\n//             />\n//             <label htmlFor=\"state\">State</label>\n//             <input\n//               type=\"text\"\n//               id=\"state\"\n//               onChange={(e) => changeHandler(\"state\", e.target.value, true)}\n//               defaultValue={newAddress?.state}\n//             />\n//             <label htmlFor=\"country\">Country</label>\n//             <input\n//               type=\"text\"\n//               id=\"country\"\n//               onChange={(e) => changeHandler(\"country\", e.target.value, true)}\n//               defaultValue={newAddress?.country}\n//             />\n//             <label htmlFor=\"pin\">Pin Code</label>\n//             <input\n//               type=\"text\"\n//               id=\"pin\"\n//               onChange={(e) => changeHandler(\"pinCode\", e.target.value, true)}\n//               defaultValue={newAddress?.pinCode}\n//             />\n//             <label htmlFor=\"phone\">Phone</label>\n//             <input\n//               type=\"text\"\n//               id=\"phone\"\n//               onChange={(e) => changeHandler(\"phone\", e.target.value)}\n//               defaultValue={newAddress?.phone}\n//             />\n//             <button\n//               onClick={(e) => submitForm(e)}\n//             >Update</button>\n//             <button onClick={()=>setShowForm(false)}>Close Form</button>\n//           </form>\n//         </div>\n//     </>\n//   );\n// };","map":{"version":3,"names":[],"sources":["C:/Users/ayush/Documents/GitHub/E-commerce/src/frontend/components/userDetails.jsx"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { useAuth } from \"../context/authContext\";\r\n// import { useCart } from \"../context/cartContext\";\r\n// import { useWishlist } from \"../context/wishistContext\";\r\n// import \"../pages/User/viewUser.css\";\r\n// import MaleUser from \"../../images/maleUser.png\";\r\n// import FemaleUser from \"../../images/femaleUser.png\";\r\n// import { useUser } from \"../context/userContext\";\r\n// export const ShowUser = () => {\r\n//   const { authDispatch, setIsLogin, authState } = useAuth();\r\n//   const { cartDispatch } = useCart();\r\n//   const { wishlistDispatch } = useWishlist();\r\n//   const { addresses,addNewAddress,updateAddress} = useUser();\r\n//   const { firstName, lastName, gender, email } = authState;\r\n//   const [showTab, setShowTab] = useState(0);\r\n//   const [update,setUpdate]=useState(-1);\r\n//   const [showForm,setShowForm]=useState(false);\r\n//   const initialData = {\r\n//     firstName: \"\",\r\n//     lastName: \"\",\r\n//     gender: \"\",\r\n//     city: \"\",\r\n//     state: \"\",\r\n//     country: \"\",\r\n//     pinCode: \"\",\r\n//     phone: \"\",\r\n//   };\r\n//   const [newAddress, setNewAddress] = useState(initialData);\r\n//   const changeHandler = (attribute, value) => {\r\n//     setNewAddress({ ...newAddress, [attribute]: value });\r\n//   };\r\n//   const submitForm=(e)=>{\r\n//     e.preventDefault();\r\n//     if(update!==-1)\r\n//     {updateAddress(update,newAddress)\r\n//      setUpdate(-1);\r\n//     }\r\n//     else\r\n//     addNewAddress(newAddress);\r\n//     setShowForm(false);\r\n//   }\r\n//   const updateHandler=(index)=>{\r\n//     setNewAddress(addresses[index]);\r\n//     setShowForm(true);\r\n//     setUpdate(index);\r\n//   }\r\n//   console.log(addresses);\r\n//   // const {firstName:formFirstName,lastName:formLastName,gender:formGender,phone,city,state,country,pinCode}=newAddress\r\n//   return (\r\n//     <>\r\n//     <div className=\"userMenu\">\r\n//       {/* <h2\r\n//         style={{ margin: \"0\", padding: \"1rem\" }}\r\n//       >{`${firstName} ${lastName}`}</h2>\r\n//       <p>Email:{email}</p>\r\n//       <p>Gender:{gender}</p>\r\n//       <p>Phone Number: {phone}</p>\r\n//       <p>Address: {`${city},${state},${country}`}</p>\r\n//       <p>Pin Code: {pin}</p>\r\n//       <button\r\n//         onClick={() => {\r\n//           authDispatch({ type: \"LOG_OUT\" });\r\n//           cartDispatch({ type: \"RESET\" });\r\n//           wishlistDispatch({ type: \"RESET\" });\r\n//           setIsLogin(false);\r\n//         }}\r\n//       >\r\n//         LogOut\r\n//       </button> */}\r\n//       <div className=\"userTabs\">\r\n//         <div\r\n//           className=\"tabs\"\r\n//           onClick={() => setShowTab(0)}\r\n//           style={{ borderBottom: showTab === 0 && \"2px solid red\" }}\r\n//         >\r\n//           User Info\r\n//         </div>\r\n//         <div\r\n//           className=\"tabs\"\r\n//           onClick={() => setShowTab(1)}\r\n//           style={{ borderBottom: showTab === 1 && \"2px solid red\" }}\r\n//         >\r\n//           Orders\r\n//         </div>\r\n//         <div\r\n//           className=\"tabs\"\r\n//           onClick={() => setShowTab(2)}\r\n//           style={{ borderBottom: showTab === 2 && \"2px solid red\" }}\r\n//         >\r\n//           Addresses\r\n//         </div>\r\n//       </div>\r\n//       <div\r\n//         style={{ display: showTab === 0 ? \"block\" : \"none\" }}\r\n//         className=\"tabMenu\"\r\n//       >\r\n//         <img\r\n//           src={gender.toLowerCase() === \"female\" ? FemaleUser : MaleUser}\r\n//           alt=\"userAvatar\"\r\n//           className=\"avatar\"\r\n//         />\r\n//         <h2>{`${firstName} ${lastName}`}</h2>\r\n//         <p>Email: {email}</p>\r\n//         <p>Gender: {gender}</p>\r\n//         <button\r\n//           onClick={() => {\r\n//             authDispatch({ type: \"LOG_OUT\" });\r\n//             cartDispatch({ type: \"RESET\" });\r\n//             wishlistDispatch({ type: \"RESET\" });\r\n//             setIsLogin(false);\r\n//           }}\r\n//         >\r\n//           LogOut\r\n//         </button>\r\n//       </div>\r\n//       <div\r\n//         style={{ display: showTab === 1 ? \"block\" : \"none\" }}\r\n//         className=\"tabMenu\"\r\n//       >\r\n//         OrdersHere\r\n//       </div>\r\n//       <div\r\n//         style={{ display: showTab === 2 ? \"block\" : \"none\" }}\r\n//         className=\"tabMenu\"\r\n//       >\r\n//         {addresses.map((address, index) => {\r\n//           const { city, state, country, pinCode, phone, firstName, lastName } =\r\n//             address;\r\n//           return (\r\n//             <div key={index} className=\"addressCards\">\r\n//               <p>\r\n//                 {firstName} {lastName}\r\n//               </p>\r\n//               <p>Phone: {phone}</p>\r\n//               <p>\r\n//                 {city},{state},{country},{pinCode}\r\n//               </p>\r\n//               <button onClick={()=>updateHandler(index)}>Update</button>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//         <button onClick={()=>{\r\n//           setShowForm(true)\r\n//           setNewAddress(initialData);\r\n//         }}>Add new Address</button>\r\n//       </div>\r\n//     </div>\r\n//     <div className=\"formBackground\" style={{display:showForm?\"block\":\"none\"}}></div>\r\n//     <div style={{width:\"50%\",background:\"white\",display:showForm?\"block\":\"none\"}} className=\"addressForm\">\r\n//           <form action=\"#\">\r\n//             <label htmlFor=\"fName\">First Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"FIRST NAME\"\r\n//               id=\"fName\"\r\n//               name=\"firstName\"\r\n//               onChange={(e) => changeHandler(\"firstName\", e.target.value)}\r\n//               defaultValue={newAddress?.firstName}\r\n             \r\n//             />\r\n//             <label htmlFor=\"lName\">Last Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"LAST NAME\"\r\n//               id=\"lName\"\r\n//               onChange={(e) => changeHandler(\"lastName\", e.target.value)}\r\n//               defaultValue={newAddress?.lastName}\r\n//             />\r\n//             <label htmlFor=\"email\">Email address</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               onChange={(e) => changeHandler(\"email\", e.target.value)}\r\n//               defaultValue={newAddress?.email}\r\n//             />\r\n//             <input\r\n//               type=\"radio\"\r\n//               id=\"male\"\r\n//               name=\"gender\"\r\n//               value=\"male\"\r\n//               onChange={(e) => changeHandler(\"gender\", e.target.value)}\r\n//               selected={newAddress.gender.toLowerCase()===\"male\"}\r\n//             />\r\n//             {JSON.stringify(newAddress.gender.toLowerCase()===\"female\")}\r\n//             <label htmlFor=\"male\">Male</label>\r\n//             <input\r\n//               type=\"radio\"\r\n//               id=\"female\"\r\n//               name=\"gender\"\r\n//               value=\"female\"\r\n//               onChange={(e) => changeHandler(\"gender\", e.target.value)}\r\n//               selected={newAddress.gender.toLowerCase()===\"female\"}\r\n//             />\r\n//             <label htmlFor=\"female\">Female</label>\r\n//             <input\r\n//               type=\"radio\"\r\n//               id=\"other\"\r\n//               name=\"gender\"\r\n//               value=\"other\"\r\n//               onChange={(e) => changeHandler(\"gender\", e.target.value)}\r\n//               selected={newAddress.gender.toLowerCase()===\"other\"}\r\n//             />\r\n//             <label htmlFor=\"other\">Other</label>\r\n//             <p>Billing Address</p>\r\n//             <label htmlFor=\"city\">City</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"city\"\r\n//               onChange={(e) => changeHandler(\"city\", e.target.value, true)}\r\n//               defaultValue={newAddress?.city}\r\n//             />\r\n//             <label htmlFor=\"state\">State</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"state\"\r\n//               onChange={(e) => changeHandler(\"state\", e.target.value, true)}\r\n//               defaultValue={newAddress?.state}\r\n//             />\r\n//             <label htmlFor=\"country\">Country</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"country\"\r\n//               onChange={(e) => changeHandler(\"country\", e.target.value, true)}\r\n//               defaultValue={newAddress?.country}\r\n//             />\r\n//             <label htmlFor=\"pin\">Pin Code</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"pin\"\r\n//               onChange={(e) => changeHandler(\"pinCode\", e.target.value, true)}\r\n//               defaultValue={newAddress?.pinCode}\r\n//             />\r\n//             <label htmlFor=\"phone\">Phone</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"phone\"\r\n//               onChange={(e) => changeHandler(\"phone\", e.target.value)}\r\n//               defaultValue={newAddress?.phone}\r\n//             />\r\n//             <button\r\n//               onClick={(e) => submitForm(e)}\r\n//             >Update</button>\r\n//             <button onClick={()=>setShowForm(false)}>Close Form</button>\r\n//           </form>\r\n//         </div>\r\n//     </>\r\n//   );\r\n// };\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}