{"ast":null,"code":"import{Response}from\"miragejs\";/**\r\n * All the routes related to Category are present here.\r\n * These are Publicly accessible routes.\r\n * */ /**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/categories\r\n * */export var getAllCategoriesHandler=function getAllCategoriesHandler(){try{return new Response(200,{},{categories:this.db.categories});}catch(error){return new Response(500,{},{error:error});}};/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/user/category/:categoryId\r\n * */export var getCategoryHandler=function getCategoryHandler(schema,request){var categoryId=request.params.categoryId;try{var category=schema.categories.findBy({_id:categoryId});return new Response(200,{},{category:category});}catch(error){return new Response(500,{},{error:error});}};","map":{"version":3,"names":["Response","getAllCategoriesHandler","categories","db","error","getCategoryHandler","schema","request","categoryId","params","category","findBy","_id"],"sources":["C:/Users/ayush/Documents/GitHub/E-commerce/e-commerce/src/backend/controllers/CategoryController.js"],"sourcesContent":["import { Response } from \"miragejs\";\r\n\r\n/**\r\n * All the routes related to Category are present here.\r\n * These are Publicly accessible routes.\r\n * */\r\n\r\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/categories\r\n * */\r\n\r\nexport const getAllCategoriesHandler = function () {\r\n  try {\r\n    return new Response(200, {}, { categories: this.db.categories });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/user/category/:categoryId\r\n * */\r\n\r\nexport const getCategoryHandler = function (schema, request) {\r\n  const categoryId = request.params.categoryId;\r\n  try {\r\n    const category = schema.categories.findBy({ _id: categoryId });\r\n    return new Response(200, {}, { category });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,UAAU,CAEnC;AACA;AACA;AACA,KAHA,CAKA;AACA;AACA;AACA,KAEA,MAAO,IAAM,CAAAC,uBAAuB,CAAG,QAA1B,CAAAA,uBAAuBA,CAAA,CAAe,CACjD,GAAI,CACF,MAAO,IAAI,CAAAD,QAAQ,CAAC,GAAG,CAAE,CAAC,CAAC,CAAE,CAAEE,UAAU,CAAE,IAAI,CAACC,EAAE,CAACD,UAAW,CAAC,CAAC,CAClE,CAAE,MAAOE,KAAK,CAAE,CACd,MAAO,IAAI,CAAAJ,QAAQ,CACjB,GAAG,CACH,CAAC,CAAC,CACF,CACEI,KAAK,CAALA,KACF,CACF,CAAC,CACH,CACF,CAAC,CAED;AACA;AACA;AACA,KAEA,MAAO,IAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAaC,MAAM,CAAEC,OAAO,CAAE,CAC3D,GAAM,CAAAC,UAAU,CAAGD,OAAO,CAACE,MAAM,CAACD,UAAU,CAC5C,GAAI,CACF,GAAM,CAAAE,QAAQ,CAAGJ,MAAM,CAACJ,UAAU,CAACS,MAAM,CAAC,CAAEC,GAAG,CAAEJ,UAAW,CAAC,CAAC,CAC9D,MAAO,IAAI,CAAAR,QAAQ,CAAC,GAAG,CAAE,CAAC,CAAC,CAAE,CAAEU,QAAQ,CAARA,QAAS,CAAC,CAAC,CAC5C,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,IAAI,CAAAJ,QAAQ,CACjB,GAAG,CACH,CAAC,CAAC,CACF,CACEI,KAAK,CAALA,KACF,CACF,CAAC,CACH,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}